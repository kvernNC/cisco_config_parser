---
- name: parser meta data
  parser_metadata:
    version: 1.0
    command: show running_configuration
    network_os: ios
###########################
##### Simple capture ######
- name: capture aaa global config
  pattern_match:
    regex: "^aaa (?!group)[^\\n]+" #    regex: "\\\ninterface ([^\\\n]+)([^!]+)"
    match_all: yes
  register: parsed_aaa_global
  export: yes

- name: capture radius-server global config
  pattern_match:
    regex: "^(radius-server [^\\n]+)" #    regex: "\\\ninterface ([^\\\n]+)([^!]+)"
    match_all: yes
  register: parsed_radiusserver_global
  export: yes

- name: capture ip radius global config
  pattern_match:
    regex: "^(ip radius [^\\n]+)" #    regex: "\\\ninterface ([^\\\n]+)([^!]+)"
    match_all: yes
  register: parsed_ipradius
  export: yes

- name: capture ip tacacs global config
  pattern_match:
    regex: "^(ip tacacs [^\\n]+)" #    regex: "\\\ninterface ([^\\\n]+)([^!]+)"
    match_all: yes
  register: parsed_iptacacs
  export: yes


###########################
### Capture subsection ####
- name: capture aaa group server subsection
  pattern_match:
    regex: "(^aaa group server [^!]+\n!)" #    regex: "\\\ninterface ([^\\\n]+)([^!]+)"
    match_all: yes
  register: parsed_aaa_group_subset
  export: no

###########################
### shrink Vrf        ####
- name: match aaa group
  pattern_group:
    - name: match name
      pattern_match:
        regex: "(?:aaa group server tacacs\\+ |aaa group server radius )([^\\\n]+)"
        content: "{{ item.matches  }}"
      register: name

    - name: match config
      pattern_match:
        regex: "(?:aaa group server tacacs\\+ |aaa group server radius )(?:\\S+)([^!]+)"
        content: "{{ item.matches  }}"
      register: config

    - name: match servers
      pattern_match:
        regex: "server-private ([^\n]+)"
        content: "{{ item.matches  }}"
        match_all: yes
      register: servers

  loop: "{{ parsed_aaa_group_subset }}"
  register: parsed_aaa_groups
  export: yes
